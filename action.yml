name: Composite Build Push Deploy Action
description: 'Generic Docker Build and Deploy to EKS'

inputs:
  app-dir:
    description: Application Directory
    required: true
    default: '.'
  app-name:
    description: Application Name
    required: true
  cluster-ca:
    description: Kubernetes Cluster CA
    required: true
  cluster-url:
    description: Kubernetes Cluster URL
    required: true
  cluster-user:
    description: Kubernetes Cluster Username
    required: true
  cluster-token:
    description: Kubernetes Cluster Token
    required: true
  docker-repo:
    description: Docker Registry/Repository (with Trailing Slash)
    required: false
  docker-user:
    description: Docker Username
    required: true
  docker-pass:
    description: Docker Password
    required: true
  repo-url:
    description: Docker Image Repository URL
    required: true

outputs:
  random-number:
    description: "Random number"
    value: ${{ steps.random-number-generator.outputs.random-id }}

runs:
  using: "composite"
  steps:

    - name: Login to Docker Repository
      uses: docker/login-action@v1
      env:
        DOCKER_REPO: ${{ inputs.docker-repo }}
        DOCKER_USER: ${{ inputs.docker-user }}
        DOCKER_PASS: ${{ inputs.docker-pass }}
      with:
        registry: ${{ env.DOCKER_REPO }}
        username: ${{ env.DOCKER_USER }}
        password: ${{ env.DOCKER_PASS }}

    - name: Determine Docker Push Repository
      id: docker-push
      shell: bash
      env:
        DOCKER_REPO: ${{ inputs.docker-repo }}
        DOCKER_USER: ${{ inputs.docker-user }}
      run: |
        if [ -z "$DOCKER_REPO" ]; then
            echo "Docker Hub detected, using DOCKER_USER"
            echo "::set-output name=url::$(echo $DOCKER_USER)"
        else
            echo "Private repository detected, using DOCKER_REPO"
            echo "::set-output name=url::$(echo $DOCKER_REPO)"
        fi

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      env:
        APP_DIR: ${{ inputs.app-dir }}
        APP_NAME: ${{ inputs.app-name }}
      with:
        context: ${{ env.APP_DIR }}/
        file: ${{ env.APP_DIR }}/Dockerfile
        push: true
        tags: ${{ steps.docker-push.outputs.url }}/${{ env.APP_NAME }}:latest

    - name: Connect to EKS
      env:
        CLUSTER_CA: ${{ inputs.cluster-ca }}
        CLUSTER_URL: ${{ inputs.cluster-url }}
        CLUSTER_USER: ${{ inputs.cluster-user }}
        CLUSTER_TOKEN: ${{ inputs.cluster-token }}
      run: ${{ github.action_path }}/eks-connect.sh
      shell: bash

    - name: Helm Upgrade
      env:
        APP_DIR: ${{ inputs.app-dir }}
        APP_NAME: ${{ inputs.app-name }}
        REPO_URL: ${{ inputs.repo-url }}
      shell: bash
      run: |
        echo helm upgrade --install $APP_NAME ./$APP_DIR/chart \
                     --set image.repository=$REPO_URL/$APP_NAME
        helm upgrade --install $APP_NAME ./$APP_DIR/chart \
                     --set image.repository=$REPO_URL/$APP_NAME

    - id: random-number-generator
      run: echo "::set-output name=random-id::$(echo $RANDOM)"
      shell: bash

    - run: ${{ github.action_path }}/goodbye.sh
      shell: bash
